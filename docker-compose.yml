version: "3.1"

services:
  db:
    container_name: dj-postgres
    image: postgres:14.0-alpine
    environment:
      - POSTGRES_PASSWORD=N6BDpzAwt7u
      - POSTGRES_USER=postgres
      - POSTGRES_DB=database
    ports:
      - 5432:5432
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data

  backend:
    container_name: dj-backend
    build: ./backend
    command: python3 manage.py runserver 0.0.0.0:8000
    restart: always
    environment:
      - ENV_DEBUG=True
      - POSTGRES_PASSWORD=N6BDpzAwt7u
      - POSTGRES_USER=postgres
      - POSTGRES_DB=database
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - BASE_URL={BASE_URL}
      - TOKEN={BOT_TOKEN}
    ports:
      - 8000:8000
    volumes:
      - ./backend:/app
      - ./storage/static:/app/static
      - ./storage/media:/app/media
      - ./storage/upload:/app/upload
      - ./backend/cronjob:/etc/cron.d
    stdin_open: True
    tty: True
    depends_on:
      - db
      - redis

  telegram:
    container_name: tgm-telegram
    build: ./backend
    command: python3 manage.py runbot
    #    command: tail -f /dev/null
    restart: always
    environment:
      - ENV_DEBUG=True
      - POSTGRES_PASSWORD=N6BDpzAwt7u
      - POSTGRES_USER=postgres
      - POSTGRES_DB=database
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - BASE_URL={BASE_URL}
      - TOKEN={BOT_TOKEN}
    ports:
      - 3030:3030
    volumes:
      - ./backend:/app
      - static:/app/static
      - media:/app/media
      - upload:/app/upload
    depends_on:
      - db
      - redis

  qcluster:
    container_name: dj-qcluster
    build: ./backend
    command: python3 manage.py qcluster
    restart: always
    environment:
      - ENV_DEBUG=True
      - POSTGRES_PASSWORD=N6BDpzAwt7u
      - POSTGRES_USER=postgres
      - POSTGRES_DB=database
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - BASE_URL={BASE_URL}
      - TOKEN={BOT_TOKEN}
    volumes:
      - ./backend:/app
      - ./storage/static:/app/static
      - ./storage/media:/app/media
      - ./storage/upload:/app/upload
    depends_on:
      - db
      - redis

    # pgAdmin web interface service

  redis:
    image: redis:alpine
    container_name: djk-redis
    ports:
      - 6379:6379
    restart: always
    volumes:
      - redis_data:/redis_data

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: dj-pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: pgadmin4@pgadmin.org
      PGADMIN_DEFAULT_PASSWORD: pgadmin4@gh@
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - db

volumes:
  pgadmin_data:
  postgres_data:
  static:
  media:
  upload:
  redis_data: